// <auto-generated />
using System;
using MES.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MES.DB.Migrations
{
    [DbContext(typeof(MesContext))]
    [Migration("20210423184740_MES7_KnowledgeUpdatedUser")]
    partial class MES7_KnowledgeUpdatedUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MES.DB.Model.AD_CUSTOMERS", b =>
                {
                    b.Property<int>("CUSTOMER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CUSTOMER_ID");

                    b.ToTable("AD_CUSTOMERS");
                });

            modelBuilder.Entity("MES.DB.Model.CITY", b =>
                {
                    b.Property<int>("CITY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("REGION_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("CITY_ID");

                    b.HasIndex("REGION_ID");

                    b.ToTable("CITY");
                });

            modelBuilder.Entity("MES.DB.Model.COMPANY", b =>
                {
                    b.Property<int>("COMPANY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("HOLDING_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("COMPANY_ID");

                    b.HasIndex("HOLDING_ID");

                    b.ToTable("COMPANY");
                });

            modelBuilder.Entity("MES.DB.Model.COUNTRY", b =>
                {
                    b.Property<int>("COUNTRY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("COUNTRY_ID");

                    b.ToTable("COUNTRY");
                });

            modelBuilder.Entity("MES.DB.Model.DEPARTMENT", b =>
                {
                    b.Property<int>("DEPARTMENT_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("COMPANY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("DEPARTMENT_ID");

                    b.HasIndex("COMPANY_ID");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("MES.DB.Model.DOMAIN", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("DOMAIN");
                });

            modelBuilder.Entity("MES.DB.Model.EMAIL_TEMPLATE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BODY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<int>("MAIN_PROCESS_STATUS_ID")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SUBJECT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("TO_ASSIGNED_GROUP_USER")
                        .HasColumnType("bit");

                    b.Property<bool?>("TO_ASSIGNED_USER")
                        .HasColumnType("bit");

                    b.Property<bool?>("TO_CREATED_USER")
                        .HasColumnType("bit");

                    b.Property<string>("TO_GROUPS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TO_USERS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.ToTable("EMAIL_TEMPLATE");
                });

            modelBuilder.Entity("MES.DB.Model.EMAIL_TEMPLATE_PARAMETERS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("PARAMETER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.ToTable("EMAIL_TEMPLATE_PARAMETERS");
                });

            modelBuilder.Entity("MES.DB.Model.GENERAL_SETTINGS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LOGIN_PAGE_BACKGROUND")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LOGIN_PAGE_TEXT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LOGO")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("GENERAL_SETTINGS");
                });

            modelBuilder.Entity("MES.DB.Model.GROUP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BUSINESS_HOURS")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("GROUP_ASSIGNTYPE_ID")
                        .HasColumnType("int");

                    b.Property<string>("GROUP_DESCRIPTION")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<bool>("GROUP_ISACTIVE")
                        .HasColumnType("bit");

                    b.Property<int>("GROUP_MANAGER_ID")
                        .HasColumnType("int");

                    b.Property<string>("GROUP_NAME")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("GROUP_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("GROUP_MANAGER_ID");

                    b.HasIndex("GROUP_TYPE_ID");

                    b.ToTable("GROUP");
                });

            modelBuilder.Entity("MES.DB.Model.GROUP_EXPERT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("EXPERT_EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EXPERT_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EXPERT_NAME_ID")
                        .HasColumnType("int");

                    b.Property<int>("GROUP_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("GROUP_ID");

                    b.ToTable("GROUP_EXPERT");
                });

            modelBuilder.Entity("MES.DB.Model.GROUP_TYPE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("TYPE_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("GROUP_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.HOLDING", b =>
                {
                    b.Property<int>("HOLDING_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CUSTOMER_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("HOLDING_ID");

                    b.HasIndex("CUSTOMER_ID");

                    b.ToTable("HOLDING");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ASSIGNED_GROUP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ASSIGNED_USER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CREATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("INCIDENT_IMPACT_ID")
                        .HasColumnType("int");

                    b.Property<int>("INCIDENT_PRIORITY_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_SOURCE_ID")
                        .HasColumnType("int");

                    b.Property<int>("INCIDENT_STATUS_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_URGENCY_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("REPORTING_USER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("SERVICE_CATALOG_ID")
                        .HasColumnType("int");

                    b.Property<string>("SUBJECT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SUB_CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATED_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ASSIGNED_GROUP_ID");

                    b.HasIndex("ASSIGNED_USER_ID");

                    b.HasIndex("CATEGORY_ID");

                    b.HasIndex("CREATED_USER_ID");

                    b.HasIndex("INCIDENT_IMPACT_ID");

                    b.HasIndex("INCIDENT_PRIORITY_ID");

                    b.HasIndex("INCIDENT_SOURCE_ID");

                    b.HasIndex("INCIDENT_STATUS_ID");

                    b.HasIndex("INCIDENT_TYPE_ID");

                    b.HasIndex("INCIDENT_URGENCY_ID");

                    b.HasIndex("REPORTING_USER_ID");

                    b.HasIndex("SERVICE_CATALOG_ID");

                    b.HasIndex("SUB_CATEGORY_ID");

                    b.HasIndex("UPDATED_USER_ID");

                    b.ToTable("INCIDENT");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_FILES", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FILE_PATH")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("INCIDENT_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("INCIDENT_ID");

                    b.ToTable("INCIDENT_FILES");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_HISTORY", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ASSIGNED_GROUP_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ASSIGNED_USER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CREATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("EFFORT_DAY")
                        .HasColumnType("int");

                    b.Property<int?>("EFFORT_HOUR")
                        .HasColumnType("int");

                    b.Property<int?>("EFFORT_MINUTE")
                        .HasColumnType("int");

                    b.Property<int>("INCIDENT_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_IMPACT_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_PRIORITY_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_SOURCE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_STATUS_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("INCIDENT_URGENCY_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("REPORTING_USER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("SERVICE_CATALOG_ID")
                        .HasColumnType("int");

                    b.Property<string>("SUBJECT")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SUB_CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("VISIBLE_TO_OPERATOR")
                        .HasColumnType("bit");

                    b.Property<bool>("VISIBLE_TO_USER")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.HasIndex("ASSIGNED_GROUP_ID");

                    b.HasIndex("ASSIGNED_USER_ID");

                    b.HasIndex("CATEGORY_ID");

                    b.HasIndex("CREATED_USER_ID");

                    b.HasIndex("INCIDENT_ID");

                    b.HasIndex("INCIDENT_IMPACT_ID");

                    b.HasIndex("INCIDENT_PRIORITY_ID");

                    b.HasIndex("INCIDENT_SOURCE_ID");

                    b.HasIndex("INCIDENT_STATUS_ID");

                    b.HasIndex("INCIDENT_TYPE_ID");

                    b.HasIndex("INCIDENT_URGENCY_ID");

                    b.HasIndex("REPORTING_USER_ID");

                    b.HasIndex("SERVICE_CATALOG_ID");

                    b.HasIndex("SUB_CATEGORY_ID");

                    b.HasIndex("UPDATED_USER_ID");

                    b.ToTable("INCIDENT_HISTORY");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_RESOLUTION", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("INCIDENT_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_APPROVED")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("RESOLVED_CODE")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RESOLVED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("RESOLVED_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("INCIDENT_ID");

                    b.ToTable("INCIDENT_RESOLUTION");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_TYPE", b =>
                {
                    b.Property<int>("INCIDENT_TYPE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("INCIDENT_TYPE_ID");

                    b.ToTable("INCIDENT_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_FILES", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CREATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("FILE_NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FILE_PATH")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("KNOWLEDGE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATED_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATED_USER_ID");

                    b.HasIndex("KNOWLEDGE_ID");

                    b.HasIndex("UPDATED_USER_ID");

                    b.ToTable("KNOWLEDGE_FILES");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_MANAGEMENT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CREATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("KNOWLEDGE_CATEGORY_ID")
                        .HasColumnType("int");

                    b.Property<string>("KNOWLEDGE_DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("KNOWLEDGE_ISACTIVE")
                        .HasColumnType("bit");

                    b.Property<string>("KNOWLEDGE_NO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KNOWLEDGE_SERVICE_ID")
                        .HasColumnType("int");

                    b.Property<int>("KNOWLEDGE_STATUS_ID")
                        .HasColumnType("int");

                    b.Property<string>("SUBJECT")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATED_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CREATED_USER_ID");

                    b.HasIndex("KNOWLEDGE_CATEGORY_ID");

                    b.HasIndex("KNOWLEDGE_SERVICE_ID");

                    b.HasIndex("KNOWLEDGE_STATUS_ID");

                    b.HasIndex("UPDATED_USER_ID");

                    b.ToTable("KNOWLEDGE_MANAGEMENT");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_SETTINGS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("WHICH_STATUS_IN_VISIBLE")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WHICH_STATUS_IN_VISIBLE");

                    b.ToTable("KNOWLEDGE_SETTINGS");
                });

            modelBuilder.Entity("MES.DB.Model.LDAP_INFO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CronType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan>("DailyTime")
                        .HasColumnType("time");

                    b.Property<int>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<DateTime>("OneTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PortNumber")
                        .HasColumnType("int");

                    b.Property<string>("SearchBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelectedOu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LDAP_INFO");
                });

            modelBuilder.Entity("MES.DB.Model.LEAVE", b =>
                {
                    b.Property<int>("LEAVE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("END_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("LEAVE_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("START_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("TOTAL_DAY")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("LEAVE_ID");

                    b.HasIndex("LEAVE_TYPE_ID");

                    b.HasIndex("USER_ID");

                    b.ToTable("LEAVE");
                });

            modelBuilder.Entity("MES.DB.Model.LEAVE_TYPE", b =>
                {
                    b.Property<int>("LEAVE_TYPE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("LEAVE_TYPE_ID");

                    b.ToTable("LEAVE_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.LOCATION", b =>
                {
                    b.Property<int>("LOCATION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CITY_ID")
                        .HasColumnType("int");

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("LOCATION_ID");

                    b.HasIndex("CITY_ID");

                    b.ToTable("LOCATION");
                });

            modelBuilder.Entity("MES.DB.Model.LOGGER_REQUEST", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CONTROLLER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("JSONDATA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("METHOD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PATH")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LOGGER_REQUEST");
                });

            modelBuilder.Entity("MES.DB.Model.LOGGER_RESPONSE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CONTROLLER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("JSONDATA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("METHOD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PATH")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("REQUEST_ID")
                        .HasColumnType("int");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("LOGGER_RESPONSE");
                });

            modelBuilder.Entity("MES.DB.Model.MAIL_SERVER_SETUP", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DEFAULT_ADDRESS")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DEFAULT_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SMTP_HOST")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SMTP_PORT")
                        .HasColumnType("int");

                    b.Property<int>("TRY_COUNT")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("USERNAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("MAIL_SERVER_SETUP");
                });

            modelBuilder.Entity("MES.DB.Model.MAIL_TO_SEND", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_SENT")
                        .HasColumnType("bit");

                    b.Property<string>("MAIL_BODY")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MAIL_SUBJECT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PARAMETER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PARAMETER_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<string>("TO_ADDRESS")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("MAIL_TO_SEND");
                });

            modelBuilder.Entity("MES.DB.Model.MAIN_PROCESS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("DOMAIN_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SHORT_CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("DOMAIN_ID");

                    b.ToTable("MAIN_PROCESS");
                });

            modelBuilder.Entity("MES.DB.Model.MENU", b =>
                {
                    b.Property<int>("MENU_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CONTROLLER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MENU_ICON")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MENU_LINK")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("MENU_NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("MENU_SHOW")
                        .HasColumnType("bit");

                    b.Property<int?>("MENU_SORT")
                        .HasColumnType("int");

                    b.Property<string>("PAGE_SUBTITLE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PAGE_TITLE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TOPMENU_ID")
                        .HasColumnType("int");

                    b.HasKey("MENU_ID");

                    b.HasIndex("TOPMENU_ID");

                    b.ToTable("MENU");
                });

            modelBuilder.Entity("MES.DB.Model.ORDER_NUMBERS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("ID_FORMAT_CODE")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("LAST_COUNTER")
                        .HasColumnType("int");

                    b.Property<string>("LAST_ORDER_NUMBER")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("SYSTEM_CODE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.ToTable("ORDER_NUMBERS");
                });

            modelBuilder.Entity("MES.DB.Model.PARAMETER", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_ACTIVE")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("MAIN_DATA_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<int>("PARAMETER_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PARENT_PARAMETER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("PRIORITY_ORDER")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.HasIndex("PARAMETER_TYPE_ID");

                    b.HasIndex("PARENT_PARAMETER_ID");

                    b.ToTable("PARAMETER");
                });

            modelBuilder.Entity("MES.DB.Model.PARAMETER_TYPE", b =>
                {
                    b.Property<int>("PARAMETER_TYPE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("TYPE_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("PARAMETER_TYPE_ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.ToTable("PARAMETER_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.PASSWORD_CHANGE_HISTORY", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CHANGE_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<Guid>("UNIQUE_IDENTIFIER")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("USER_ID");

                    b.ToTable("PASSWORD_CHANGE_HISTORY");
                });

            modelBuilder.Entity("MES.DB.Model.REGION", b =>
                {
                    b.Property<int>("REGION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("COUNTRY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("REGION_ID");

                    b.HasIndex("COUNTRY_ID");

                    b.ToTable("REGION");
                });

            modelBuilder.Entity("MES.DB.Model.RULE", b =>
                {
                    b.Property<int>("RULE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("RULE_ACTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RULE_ACTION_DATA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RULE_ACTION_TYPE")
                        .HasColumnType("int");

                    b.Property<string>("RULE_DESCRIPTION")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("RULE_NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("RULE_ID");

                    b.ToTable("RULE");
                });

            modelBuilder.Entity("MES.DB.Model.RULE_ACTIONS", b =>
                {
                    b.Property<int>("ACTION_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ACTION_CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ACTION_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ACTION_ID");

                    b.ToTable("RULE_ACTIONS");
                });

            modelBuilder.Entity("MES.DB.Model.RULE_CRITERIA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FOREIGN_KEY")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FOREIGN_TABLE_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FOREIGN_VALUE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FOREIGN_WHERE_CLAUSE")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IS_FOREIGN")
                        .HasColumnType("bit");

                    b.HasKey("ID");

                    b.ToTable("RULE_CRITERIA");
                });

            modelBuilder.Entity("MES.DB.Model.RULE_DETAIL", b =>
                {
                    b.Property<int>("RULE_DETAIL_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CONDITION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CRITERIA")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("REQUIREMENT")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RULE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("VALUE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RULE_DETAIL_ID");

                    b.HasIndex("RULE_ID");

                    b.ToTable("RULE_DETAIL");
                });

            modelBuilder.Entity("MES.DB.Model.SERVICECATALOG", b =>
                {
                    b.Property<int>("SERVICE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CREATED_USER_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("OPERATIONAL_STATUS_ID")
                        .HasColumnType("int");

                    b.Property<int>("SERVICE_LEVEL")
                        .HasColumnType("int");

                    b.Property<int>("SERVICE_MANAGER_BUSINESS_ID")
                        .HasColumnType("int");

                    b.Property<int>("SERVICE_MANAGER_IT_ID")
                        .HasColumnType("int");

                    b.Property<string>("SERVICE_NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SERVICE_PARAMETER_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UPDATED_USER_ID")
                        .HasColumnType("int");

                    b.HasKey("SERVICE_ID");

                    b.HasIndex("CREATED_USER_ID");

                    b.HasIndex("OPERATIONAL_STATUS_ID");

                    b.HasIndex("SERVICE_MANAGER_BUSINESS_ID");

                    b.HasIndex("SERVICE_MANAGER_IT_ID");

                    b.HasIndex("SERVICE_PARAMETER_ID");

                    b.HasIndex("UPDATED_USER_ID");

                    b.ToTable("SERVICECATALOG");
                });

            modelBuilder.Entity("MES.DB.Model.SLA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("EFFORT_DAY")
                        .HasColumnType("int");

                    b.Property<int>("EFFORT_HOUR")
                        .HasColumnType("int");

                    b.Property<int>("EFFORT_MINUTE")
                        .HasColumnType("int");

                    b.Property<int>("IMPORTANCE_LEVEL_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TYPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("WORKING_SCHEDULE_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("IMPORTANCE_LEVEL_ID");

                    b.HasIndex("MAIN_PROCESS_ID");

                    b.HasIndex("WORKING_SCHEDULE_ID");

                    b.ToTable("SLA");
                });

            modelBuilder.Entity("MES.DB.Model.SLA_AREA", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ASSET_ID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("CUSTOMER_ID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("SERVICE_ID")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SLA_AREA_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<int>("SLA_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SLA_ID");

                    b.ToTable("SLA_AREA");
                });

            modelBuilder.Entity("MES.DB.Model.SLA_EVENTS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("EVENT_ID")
                        .HasColumnType("int");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("SLA_ID")
                        .HasColumnType("int");

                    b.Property<int>("STATUS_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SLA_ID");

                    b.HasIndex("STATUS_ID");

                    b.ToTable("SLA_EVENTS");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY", b =>
                {
                    b.Property<int>("SURVEY_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EXECUTION_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("MAIN_PROCESS_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("START_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("SURVEY_NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SURVEY_PARAMETER_ID")
                        .HasColumnType("int");

                    b.Property<int?>("SURVEY_SEND_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<bool?>("TO_ASSIGNED_GROUP_USER")
                        .HasColumnType("bit");

                    b.Property<bool?>("TO_ASSIGNED_USER")
                        .HasColumnType("bit");

                    b.Property<bool?>("TO_CREATED_USER")
                        .HasColumnType("bit");

                    b.Property<string>("TO_GROUPS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TO_USERS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("SURVEY_ID");

                    b.HasIndex("SURVEY_PARAMETER_ID");

                    b.ToTable("SURVEY");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY_HISTORY", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("SURVEY_ID")
                        .HasColumnType("int");

                    b.Property<Guid>("UNIQUE_ID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("USER_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("SURVEY_HISTORY");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY_QUESTION", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BINARY_OPTION_1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BINARY_OPTION_2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("EVALUATION_1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EVALUATION_2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EVALUATION_3")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EVALUATION_4")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EVALUATION_5")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("QUESTION_TEXT")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("SURVEY_ANSWER_TYPE_ID")
                        .HasColumnType("int");

                    b.Property<int>("SURVEY_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SURVEY_ID");

                    b.ToTable("SURVEY_QUESTION");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY_QUESTION_ANSWER", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ANSWER")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("SURVEY_HISTORY_ID")
                        .HasColumnType("int");

                    b.Property<int>("SURVEY_QUESTION_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("SURVEY_HISTORY_ID");

                    b.HasIndex("SURVEY_QUESTION_ID");

                    b.ToTable("SURVEY_QUESTION_ANSWER");
                });

            modelBuilder.Entity("MES.DB.Model.TIMEZONE", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NAME")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UTC_DAYLIGHT_OFFSET")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UTC_STANDARD_OFFSET")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("TIMEZONE");
                });

            modelBuilder.Entity("MES.DB.Model.TIME_MANAGEMENT", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BUSINESS_HOURS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CALENDAR_DAYS")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("CALENDAR_NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ISACTIVE")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("TIMEZONE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("TIMEZONE_ID");

                    b.ToTable("TIME_MANAGEMENT");
                });

            modelBuilder.Entity("MES.DB.Model.TIME_MANAGEMENT_OFFDAYS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("END_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int>("OFF_DAY")
                        .HasColumnType("int");

                    b.Property<DateTime>("START_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("TIME_MANAGEMENT_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("YEAR")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TIME_MANAGEMENT_ID");

                    b.ToTable("TIME_MANAGEMENT_OFFDAYS");
                });

            modelBuilder.Entity("MES.DB.Model.TITLE", b =>
                {
                    b.Property<int>("TITLE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("TITLE_ID");

                    b.ToTable("TITLE");
                });

            modelBuilder.Entity("MES.DB.Model.USER", b =>
                {
                    b.Property<int>("USER_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DEPARTMENT_ID")
                        .HasColumnType("int");

                    b.Property<string>("DESCRIPTION")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("EMAIL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IMAGE_PATH")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("ISLDAP")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<int?>("LOCATION_ID")
                        .HasColumnType("int");

                    b.Property<int?>("MANAGER_ID")
                        .HasColumnType("int");

                    b.Property<string>("NAME")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PASSWORD")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SURNAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TITLE_ID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<string>("USERNAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("USER_GROUP_ID")
                        .HasColumnType("int");

                    b.Property<bool>("USER_ISACTIVE")
                        .HasColumnType("bit");

                    b.Property<int?>("USER_TYPE_ID")
                        .HasColumnType("int");

                    b.HasKey("USER_ID");

                    b.HasIndex("DEPARTMENT_ID");

                    b.HasIndex("LOCATION_ID");

                    b.HasIndex("TITLE_ID");

                    b.HasIndex("USER_GROUP_ID");

                    b.HasIndex("USER_TYPE_ID");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("MES.DB.Model.USERTYPE_MENU", b =>
                {
                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Checked")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("UserTypeId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("USERTYPE_MENU");
                });

            modelBuilder.Entity("MES.DB.Model.USER_GROUP", b =>
                {
                    b.Property<int>("USER_GROUP_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("USER_GROUP_ID");

                    b.ToTable("USER_GROUP");
                });

            modelBuilder.Entity("MES.DB.Model.USER_TYPE", b =>
                {
                    b.Property<int>("USER_TYPE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("USER_TYPE_ID");

                    b.ToTable("USER_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.WORKING_DAYS", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CODE")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("WORKING_DAYS");
                });

            modelBuilder.Entity("MES.DB.Model.WORKING_SCHEDULE", b =>
                {
                    b.Property<int>("WORKING_SCHEDULE_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CREATED_DATE")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("END_TIME")
                        .HasColumnType("time");

                    b.Property<bool>("ISACTIVE")
                        .HasColumnType("bit");

                    b.Property<bool>("IS_DELETED")
                        .HasColumnType("bit");

                    b.Property<string>("NAME")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<TimeSpan>("START_TIME")
                        .HasColumnType("time");

                    b.Property<DateTime?>("UPDATED_DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("WORKING_SCHEDULE_ID");

                    b.ToTable("WORKING_SCHEDULE");
                });

            modelBuilder.Entity("MES.DB.Model.CITY", b =>
                {
                    b.HasOne("MES.DB.Model.REGION", "REGION")
                        .WithMany()
                        .HasForeignKey("REGION_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("REGION");
                });

            modelBuilder.Entity("MES.DB.Model.COMPANY", b =>
                {
                    b.HasOne("MES.DB.Model.HOLDING", "HOLDING")
                        .WithMany()
                        .HasForeignKey("HOLDING_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HOLDING");
                });

            modelBuilder.Entity("MES.DB.Model.DEPARTMENT", b =>
                {
                    b.HasOne("MES.DB.Model.COMPANY", "COMPANY")
                        .WithMany()
                        .HasForeignKey("COMPANY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("COMPANY");
                });

            modelBuilder.Entity("MES.DB.Model.EMAIL_TEMPLATE", b =>
                {
                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAIN_PROCESS")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MAIN_PROCESS");
                });

            modelBuilder.Entity("MES.DB.Model.EMAIL_TEMPLATE_PARAMETERS", b =>
                {
                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAIN_PROCESS")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MAIN_PROCESS");
                });

            modelBuilder.Entity("MES.DB.Model.GROUP", b =>
                {
                    b.HasOne("MES.DB.Model.USER", "GROUP_USERMANAGERMODEL")
                        .WithMany()
                        .HasForeignKey("GROUP_MANAGER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.GROUP_TYPE", "GROUP_GROUPTYPEMODEL")
                        .WithMany()
                        .HasForeignKey("GROUP_TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GROUP_GROUPTYPEMODEL");

                    b.Navigation("GROUP_USERMANAGERMODEL");
                });

            modelBuilder.Entity("MES.DB.Model.GROUP_EXPERT", b =>
                {
                    b.HasOne("MES.DB.Model.GROUP", "GROUP")
                        .WithMany()
                        .HasForeignKey("GROUP_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GROUP");
                });

            modelBuilder.Entity("MES.DB.Model.HOLDING", b =>
                {
                    b.HasOne("MES.DB.Model.AD_CUSTOMERS", "AD_CUSTOMERS")
                        .WithMany()
                        .HasForeignKey("CUSTOMER_ID");

                    b.Navigation("AD_CUSTOMERS");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT", b =>
                {
                    b.HasOne("MES.DB.Model.GROUP", "ASSIGNED_GROUP")
                        .WithMany()
                        .HasForeignKey("ASSIGNED_GROUP_ID");

                    b.HasOne("MES.DB.Model.USER", "ASSIGNED_USER")
                        .WithMany()
                        .HasForeignKey("ASSIGNED_USER_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "CATEGORY")
                        .WithMany()
                        .HasForeignKey("CATEGORY_ID");

                    b.HasOne("MES.DB.Model.USER", "CREATED_USER")
                        .WithMany()
                        .HasForeignKey("CREATED_USER_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_IMPACT")
                        .WithMany()
                        .HasForeignKey("INCIDENT_IMPACT_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_PRIORITY")
                        .WithMany()
                        .HasForeignKey("INCIDENT_PRIORITY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_SOURCE")
                        .WithMany()
                        .HasForeignKey("INCIDENT_SOURCE_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_STATUS")
                        .WithMany()
                        .HasForeignKey("INCIDENT_STATUS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_TYPE")
                        .WithMany()
                        .HasForeignKey("INCIDENT_TYPE_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_URGENCY")
                        .WithMany()
                        .HasForeignKey("INCIDENT_URGENCY_ID");

                    b.HasOne("MES.DB.Model.USER", "REPORTING_USER")
                        .WithMany()
                        .HasForeignKey("REPORTING_USER_ID");

                    b.HasOne("MES.DB.Model.SERVICECATALOG", "SERVICE_CATALOG")
                        .WithMany()
                        .HasForeignKey("SERVICE_CATALOG_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "SUB_CATEGORY")
                        .WithMany()
                        .HasForeignKey("SUB_CATEGORY_ID");

                    b.HasOne("MES.DB.Model.USER", "UPDATED_USER")
                        .WithMany()
                        .HasForeignKey("UPDATED_USER_ID");

                    b.Navigation("ASSIGNED_GROUP");

                    b.Navigation("ASSIGNED_USER");

                    b.Navigation("CATEGORY");

                    b.Navigation("CREATED_USER");

                    b.Navigation("INCIDENT_IMPACT");

                    b.Navigation("INCIDENT_PRIORITY");

                    b.Navigation("INCIDENT_SOURCE");

                    b.Navigation("INCIDENT_STATUS");

                    b.Navigation("INCIDENT_TYPE");

                    b.Navigation("INCIDENT_URGENCY");

                    b.Navigation("REPORTING_USER");

                    b.Navigation("SERVICE_CATALOG");

                    b.Navigation("SUB_CATEGORY");

                    b.Navigation("UPDATED_USER");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_FILES", b =>
                {
                    b.HasOne("MES.DB.Model.INCIDENT", "INCIDENT")
                        .WithMany()
                        .HasForeignKey("INCIDENT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("INCIDENT");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_HISTORY", b =>
                {
                    b.HasOne("MES.DB.Model.GROUP", "ASSIGNED_GROUP")
                        .WithMany()
                        .HasForeignKey("ASSIGNED_GROUP_ID");

                    b.HasOne("MES.DB.Model.USER", "ASSIGNED_USER")
                        .WithMany()
                        .HasForeignKey("ASSIGNED_USER_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "CATEGORY")
                        .WithMany()
                        .HasForeignKey("CATEGORY_ID");

                    b.HasOne("MES.DB.Model.USER", "CREATED_USER")
                        .WithMany()
                        .HasForeignKey("CREATED_USER_ID");

                    b.HasOne("MES.DB.Model.INCIDENT", "INCIDENT")
                        .WithMany()
                        .HasForeignKey("INCIDENT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_IMPACT")
                        .WithMany()
                        .HasForeignKey("INCIDENT_IMPACT_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_PRIORITY")
                        .WithMany()
                        .HasForeignKey("INCIDENT_PRIORITY_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_SOURCE")
                        .WithMany()
                        .HasForeignKey("INCIDENT_SOURCE_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_STATUS")
                        .WithMany()
                        .HasForeignKey("INCIDENT_STATUS_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_TYPE")
                        .WithMany()
                        .HasForeignKey("INCIDENT_TYPE_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "INCIDENT_URGENCY")
                        .WithMany()
                        .HasForeignKey("INCIDENT_URGENCY_ID");

                    b.HasOne("MES.DB.Model.USER", "REPORTING_USER")
                        .WithMany()
                        .HasForeignKey("REPORTING_USER_ID");

                    b.HasOne("MES.DB.Model.SERVICECATALOG", "SERVICE_CATALOG")
                        .WithMany()
                        .HasForeignKey("SERVICE_CATALOG_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "SUB_CATEGORY")
                        .WithMany()
                        .HasForeignKey("SUB_CATEGORY_ID");

                    b.HasOne("MES.DB.Model.USER", "UPDATED_USER")
                        .WithMany()
                        .HasForeignKey("UPDATED_USER_ID");

                    b.Navigation("ASSIGNED_GROUP");

                    b.Navigation("ASSIGNED_USER");

                    b.Navigation("CATEGORY");

                    b.Navigation("CREATED_USER");

                    b.Navigation("INCIDENT");

                    b.Navigation("INCIDENT_IMPACT");

                    b.Navigation("INCIDENT_PRIORITY");

                    b.Navigation("INCIDENT_SOURCE");

                    b.Navigation("INCIDENT_STATUS");

                    b.Navigation("INCIDENT_TYPE");

                    b.Navigation("INCIDENT_URGENCY");

                    b.Navigation("REPORTING_USER");

                    b.Navigation("SERVICE_CATALOG");

                    b.Navigation("SUB_CATEGORY");

                    b.Navigation("UPDATED_USER");
                });

            modelBuilder.Entity("MES.DB.Model.INCIDENT_RESOLUTION", b =>
                {
                    b.HasOne("MES.DB.Model.INCIDENT", "INCIDENT")
                        .WithMany()
                        .HasForeignKey("INCIDENT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("INCIDENT");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_FILES", b =>
                {
                    b.HasOne("MES.DB.Model.USER", "CREATED_USER")
                        .WithMany()
                        .HasForeignKey("CREATED_USER_ID");

                    b.HasOne("MES.DB.Model.KNOWLEDGE_MANAGEMENT", "KNOWLEDGE")
                        .WithMany()
                        .HasForeignKey("KNOWLEDGE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "UPDATED_USER")
                        .WithMany()
                        .HasForeignKey("UPDATED_USER_ID");

                    b.Navigation("CREATED_USER");

                    b.Navigation("KNOWLEDGE");

                    b.Navigation("UPDATED_USER");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_MANAGEMENT", b =>
                {
                    b.HasOne("MES.DB.Model.USER", "CREATED_USER")
                        .WithMany()
                        .HasForeignKey("CREATED_USER_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "CATEGORY_MODEL")
                        .WithMany()
                        .HasForeignKey("KNOWLEDGE_CATEGORY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.SERVICECATALOG", "SERVICE_MODEL")
                        .WithMany()
                        .HasForeignKey("KNOWLEDGE_SERVICE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "STATUS_MODEL")
                        .WithMany()
                        .HasForeignKey("KNOWLEDGE_STATUS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "UPDATED_USER")
                        .WithMany()
                        .HasForeignKey("UPDATED_USER_ID");

                    b.Navigation("CATEGORY_MODEL");

                    b.Navigation("CREATED_USER");

                    b.Navigation("SERVICE_MODEL");

                    b.Navigation("STATUS_MODEL");

                    b.Navigation("UPDATED_USER");
                });

            modelBuilder.Entity("MES.DB.Model.KNOWLEDGE_SETTINGS", b =>
                {
                    b.HasOne("MES.DB.Model.PARAMETER", "STATUS_MODEL")
                        .WithMany()
                        .HasForeignKey("WHICH_STATUS_IN_VISIBLE")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("STATUS_MODEL");
                });

            modelBuilder.Entity("MES.DB.Model.LEAVE", b =>
                {
                    b.HasOne("MES.DB.Model.LEAVE_TYPE", "LEAVE_TYPE")
                        .WithMany()
                        .HasForeignKey("LEAVE_TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "USER")
                        .WithMany()
                        .HasForeignKey("USER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LEAVE_TYPE");

                    b.Navigation("USER");
                });

            modelBuilder.Entity("MES.DB.Model.LOCATION", b =>
                {
                    b.HasOne("MES.DB.Model.CITY", "CITY")
                        .WithMany()
                        .HasForeignKey("CITY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CITY");
                });

            modelBuilder.Entity("MES.DB.Model.MAIN_PROCESS", b =>
                {
                    b.HasOne("MES.DB.Model.DOMAIN", "DOMAIN")
                        .WithMany()
                        .HasForeignKey("DOMAIN_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DOMAIN");
                });

            modelBuilder.Entity("MES.DB.Model.MENU", b =>
                {
                    b.HasOne("MES.DB.Model.MENU", null)
                        .WithMany("SUBMENULIST")
                        .HasForeignKey("TOPMENU_ID");
                });

            modelBuilder.Entity("MES.DB.Model.ORDER_NUMBERS", b =>
                {
                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAINPROCESS_MODEL")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MAINPROCESS_MODEL");
                });

            modelBuilder.Entity("MES.DB.Model.PARAMETER", b =>
                {
                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAIN_PROCESS")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER_TYPE", "PARAMETER_TYPE")
                        .WithMany()
                        .HasForeignKey("PARAMETER_TYPE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "PARENT_PARAMETER")
                        .WithMany()
                        .HasForeignKey("PARENT_PARAMETER_ID");

                    b.Navigation("MAIN_PROCESS");

                    b.Navigation("PARAMETER_TYPE");

                    b.Navigation("PARENT_PARAMETER");
                });

            modelBuilder.Entity("MES.DB.Model.PARAMETER_TYPE", b =>
                {
                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAIN_PROCESS")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID");

                    b.Navigation("MAIN_PROCESS");
                });

            modelBuilder.Entity("MES.DB.Model.PASSWORD_CHANGE_HISTORY", b =>
                {
                    b.HasOne("MES.DB.Model.USER", "USER")
                        .WithMany()
                        .HasForeignKey("USER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("USER");
                });

            modelBuilder.Entity("MES.DB.Model.REGION", b =>
                {
                    b.HasOne("MES.DB.Model.COUNTRY", "COUNTRY")
                        .WithMany()
                        .HasForeignKey("COUNTRY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("COUNTRY");
                });

            modelBuilder.Entity("MES.DB.Model.RULE_DETAIL", b =>
                {
                    b.HasOne("MES.DB.Model.RULE", "RULE")
                        .WithMany()
                        .HasForeignKey("RULE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RULE");
                });

            modelBuilder.Entity("MES.DB.Model.SERVICECATALOG", b =>
                {
                    b.HasOne("MES.DB.Model.USER", "CREATED_USER")
                        .WithMany()
                        .HasForeignKey("CREATED_USER_ID");

                    b.HasOne("MES.DB.Model.PARAMETER", "PARAMETER_OPSTATUSMODEL")
                        .WithMany()
                        .HasForeignKey("OPERATIONAL_STATUS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "USER_MANAGERBUSINESSMODEL")
                        .WithMany()
                        .HasForeignKey("SERVICE_MANAGER_BUSINESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "USER_MANAGERITMODEL")
                        .WithMany()
                        .HasForeignKey("SERVICE_MANAGER_IT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "PARAMETERMODEL")
                        .WithMany()
                        .HasForeignKey("SERVICE_PARAMETER_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER", "UPDATED_USER")
                        .WithMany()
                        .HasForeignKey("UPDATED_USER_ID");

                    b.Navigation("CREATED_USER");

                    b.Navigation("PARAMETER_OPSTATUSMODEL");

                    b.Navigation("PARAMETERMODEL");

                    b.Navigation("UPDATED_USER");

                    b.Navigation("USER_MANAGERBUSINESSMODEL");

                    b.Navigation("USER_MANAGERITMODEL");
                });

            modelBuilder.Entity("MES.DB.Model.SLA", b =>
                {
                    b.HasOne("MES.DB.Model.PARAMETER", "IMPORTANCE_LEVEL_MODEL")
                        .WithMany()
                        .HasForeignKey("IMPORTANCE_LEVEL_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.MAIN_PROCESS", "MAIN_PROCESS_MODEL")
                        .WithMany()
                        .HasForeignKey("MAIN_PROCESS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.WORKING_SCHEDULE", "WORKING_SCHEDULE_MODEL")
                        .WithMany()
                        .HasForeignKey("WORKING_SCHEDULE_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("IMPORTANCE_LEVEL_MODEL");

                    b.Navigation("MAIN_PROCESS_MODEL");

                    b.Navigation("WORKING_SCHEDULE_MODEL");
                });

            modelBuilder.Entity("MES.DB.Model.SLA_AREA", b =>
                {
                    b.HasOne("MES.DB.Model.SLA", "SLA_MODEL")
                        .WithMany()
                        .HasForeignKey("SLA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SLA_MODEL");
                });

            modelBuilder.Entity("MES.DB.Model.SLA_EVENTS", b =>
                {
                    b.HasOne("MES.DB.Model.SLA", "SLA_MODEL")
                        .WithMany()
                        .HasForeignKey("SLA_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.PARAMETER", "STATUS_MODEL")
                        .WithMany()
                        .HasForeignKey("STATUS_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SLA_MODEL");

                    b.Navigation("STATUS_MODEL");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY", b =>
                {
                    b.HasOne("MES.DB.Model.PARAMETER", "PARAMETER")
                        .WithMany()
                        .HasForeignKey("SURVEY_PARAMETER_ID");

                    b.Navigation("PARAMETER");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY_QUESTION", b =>
                {
                    b.HasOne("MES.DB.Model.SURVEY", "SURVEY")
                        .WithMany()
                        .HasForeignKey("SURVEY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SURVEY");
                });

            modelBuilder.Entity("MES.DB.Model.SURVEY_QUESTION_ANSWER", b =>
                {
                    b.HasOne("MES.DB.Model.SURVEY_HISTORY", "SURVEY_HISTORY")
                        .WithMany()
                        .HasForeignKey("SURVEY_HISTORY_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.SURVEY_QUESTION", "SURVEY_QUESTION")
                        .WithMany()
                        .HasForeignKey("SURVEY_QUESTION_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("SURVEY_HISTORY");

                    b.Navigation("SURVEY_QUESTION");
                });

            modelBuilder.Entity("MES.DB.Model.TIME_MANAGEMENT", b =>
                {
                    b.HasOne("MES.DB.Model.TIMEZONE", "TIMEZONE")
                        .WithMany()
                        .HasForeignKey("TIMEZONE_ID");

                    b.Navigation("TIMEZONE");
                });

            modelBuilder.Entity("MES.DB.Model.TIME_MANAGEMENT_OFFDAYS", b =>
                {
                    b.HasOne("MES.DB.Model.TIME_MANAGEMENT", "TIME_MANAGEMENT")
                        .WithMany()
                        .HasForeignKey("TIME_MANAGEMENT_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TIME_MANAGEMENT");
                });

            modelBuilder.Entity("MES.DB.Model.USER", b =>
                {
                    b.HasOne("MES.DB.Model.DEPARTMENT", "DEPARTMENT")
                        .WithMany()
                        .HasForeignKey("DEPARTMENT_ID");

                    b.HasOne("MES.DB.Model.LOCATION", "LOCATION")
                        .WithMany()
                        .HasForeignKey("LOCATION_ID");

                    b.HasOne("MES.DB.Model.TITLE", "TITLE")
                        .WithMany()
                        .HasForeignKey("TITLE_ID");

                    b.HasOne("MES.DB.Model.USER_GROUP", "USER_GROUP")
                        .WithMany()
                        .HasForeignKey("USER_GROUP_ID");

                    b.HasOne("MES.DB.Model.USER_TYPE", "USER_TYPE")
                        .WithMany()
                        .HasForeignKey("USER_TYPE_ID");

                    b.Navigation("DEPARTMENT");

                    b.Navigation("LOCATION");

                    b.Navigation("TITLE");

                    b.Navigation("USER_GROUP");

                    b.Navigation("USER_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.USERTYPE_MENU", b =>
                {
                    b.HasOne("MES.DB.Model.MENU", "MENU")
                        .WithMany("USERTYPE_MENUS")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MES.DB.Model.USER_TYPE", "USER_TYPE")
                        .WithMany("USERTYPE_MENUS")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MENU");

                    b.Navigation("USER_TYPE");
                });

            modelBuilder.Entity("MES.DB.Model.MENU", b =>
                {
                    b.Navigation("SUBMENULIST");

                    b.Navigation("USERTYPE_MENUS");
                });

            modelBuilder.Entity("MES.DB.Model.USER_TYPE", b =>
                {
                    b.Navigation("USERTYPE_MENUS");
                });
#pragma warning restore 612, 618
        }
    }
}
